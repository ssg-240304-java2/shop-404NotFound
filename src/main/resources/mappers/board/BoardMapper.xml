<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nf404.devshop.board.mapper.BoardMapper">

    <resultMap id="boardResultMap" type="com.nf404.devshop.board.model.dto.BoardResponse">
        <id column="board_id" property="boardId"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="writer" property="writer"/>
        <result column="view_cnt" property="viewCnt"/>
        <result column="notice_yn" property="noticeYn"/>
        <result column="delete_yn" property="deleteYn"/>
        <result column="created_date" property="createdDate"/>
        <result column="modified_date" property="modifiedDate"/>
    </resultMap>
    <!-- tbl_board 테이블 전체 컬럼 -->

    <sql id="boardColumns">
          board_id
        , title
        , content
        , writer
        , view_cnt
        , notice_yn
        , delete_yn
        , created_date
        , modified_date
    </sql>


    <!-- 게시글 저장 -->
    <insert id="saveBoard" parameterType="com.nf404.devshop.board.mapper.BoardMapper" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO tbl_board (
            <include refid="boardColumns"/>
        ) VALUES (
        #{boardId}
        , #{title}
        , #{content}
        , #{writer}
        , 0
        , #{noticeYn}
        , 0
        , NOW()
        , NULL
        )
    </insert>


    <!-- 게시글 상세정보 조회 -->
    <select id="findByBoardId" parameterType="_int" resultMap="boardResultMap">
        SELECT
        <include refid="boardColumns" />
        FROM
        tbl_board
        WHERE
        board_id = #{boardId}
    </select>


    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="com.nf404.devshop.board.model.dto.BoardRequest">
        UPDATE tbl_board
        SET
            modified_date = NOW()
          , title = #{title}
          , content = #{content}
          , writer = #{writer}
          , notice_yn = #{noticeYn}
        WHERE
            board_id = #{boardId}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteByBoardId" parameterType="_int">
        UPDATE tbl_board
        SET
            delete_yn = 1
        WHERE
            board_id = #{boardId}
    </delete>


    <!-- 게시글 리스트 조회 -->
    <select id="findAllBoard" resultMap="boardResultMap">
        SELECT
            <include refid="boardColumns" />
        FROM
            tbl_board
        WHERE
            delete_yn = 0
            <include refid="search" />
        ORDER BY
            board_id DESC
        LIMIT
            #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="findAllBoards" resultMap="boardResultMap">
        SELECT
            <include refid="boardColumns" />
        FROM
            tbl_board
        WHERE
            delete_yn = 0
        ORDER BY
            notice_yn DESC, board_id DESC
    </select>

    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.nf404.devshop.board.model.dto.SearchDTO" resultType="_int">
        SELECT
            COUNT(*)
        FROM
            tbl_board
        WHERE
            delete_yn = 0
            <include refid="search" />
    </select>


    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>

                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND (
                    title LIKE CONCAT('%', #{keyword}, '%')
                    OR content LIKE CONCAT('%', #{keyword}, '%')
                    OR writer LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>
</mapper>